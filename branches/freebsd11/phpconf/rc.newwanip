#!/usr/local/bin/php -f
<?php
/*
	$Id: rc.newwanip 301 2008-09-06 18:58:12Z mkasper $
	part of m0n0wall (http://m0n0.ch/wall)
	
	Copyright (C) 2003-2006 Manuel Kasper <mk@neon1.net>.
	All rights reserved.
	
	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions are met:
	
	1. Redistributions of source code must retain the above copyright notice,
	   this list of conditions and the following disclaimer.
	
	2. Redistributions in binary form must reproduce the above copyright
	   notice, this list of conditions and the following disclaimer in the
	   documentation and/or other materials provided with the distribution.
	
	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
	AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
	OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	POSSIBILITY OF SUCH DAMAGE.
*/

	/* parse the configuration and include all functions used below */
	require_once("config.inc");
	require_once("functions.inc");
	
	/* WAN IP address has changed */
	
	/* make sure to wait until the boot scripts have finished */
	while (file_exists("{$g['varrun_path']}/booting")) {
		sleep(1);
	}
	
	lock_file("{$g['varrun_path']}/newwanip.lock");
	
	$curwanip = get_current_wan_address();
	
	/*	dhclient or MPD told us that the IP address has changed;
		let's see if that's really true to avoid reloading things
		when it's not really necessary (dhclient likes to
		execute its dhclient-exit-hooks also on renewals)
	*/		
	if (file_exists("{$g['vardb_path']}/wanip")) {
		$oldwanip = chop(file_get_contents("{$g['vardb_path']}/wanip"));
		
		if ($curwanip == $oldwanip) {
			unlock_file("{$g['varrun_path']}/newwanip.lock");
			return 0;	/* nothing to do */
		}
	}
	
	/* reload firewall/NAT rules */
	filter_configure();
	
	/* flush NAT table */
	filter_flush_nat_table();
	
	/* regenerate resolv.conf if DNS overrides are allowed */
	if (isset($config['system']['dnsallowoverride']))
		system_resolvconf_generate(true);
	
	/* perform RFC 2136 DNS update */
	services_dnsupdate_process();
	
	/* reconfigure IPsec tunnels */
	vpn_ipsec_configure(true);
	
	if (ipv6enabled()) {
		/* reconfigure v6 on WAN interface (may be 6to4 or PPP) */
		interfaces_wan_configure6(true);
	}
	
	/* write current WAN IP to file */
	$fd = @fopen("{$g['vardb_path']}/wanip", "w");
	if ($fd) {
		fwrite($fd, $curwanip);
		fclose($fd);
	}
	
	unlock_file("{$g['varrun_path']}/newwanip.lock");
?>
